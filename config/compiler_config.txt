# This config file contains parameters used by PPL when your project is compiled.
# Look at the example assignments below and modify them if needed.
# Note: Comment lines start with #

# java_compiler_options
# ---------------------
# This parameter defines the Java compiler options applied each time the Java compiler is executed.
# Please refer to Java's official documentation for a full list of options supported.
# By default no value is assigned to this parameter
# Notes:
#    - the following options are automatically set by PPL and can therefore not be used with this parameter: -classpath; -sourcepath; -d
#    - spaces within option values must be escaped with &nbsp; (e.g. '-name my value' must be written '-name my&nbsp;value')
# example:
# java_compiler_options = -Xlint -target 7
# java_compiler_options = "-enableassertions"
java_compiler_options = "-Xlint:unchecked -Xlint:deprecation -Xdiags:verbose"

# store_Java_source_code_to_files
# -------------------------------
# This parameter can be used if you want the PPL compiler to create Java source code files on disk.
# By default Java source code is only generated in memory and not written to disk (for best performance).
# Typically this parameter is set to 'yes' if:
#   - you have a big application that generates an 'out of memory' error during compilation. Note that in this case you can alternatively try to increase the compiler's working memory by using parameter 'java_exe_options', e.g. java_exe_options = -Xmx512m
#   - you want to have a look at the Java code generated by the PPL compiler
# Valid values are 'yes' and 'no'
# example:
# store_Java_source_code_to_files = yes

# DISABLE_WARNINGS
# ----------------
# Used to disable compiler warnings.
# By default warnings are enabled and they should only be disabled in exceptional situations.
# Valid values are 'yes' and 'no'
# example:
# DISABLE_WARNINGS = yes

OS_command_template_to_open_source_code_file = "\"C:/Program Files/JetBrains/IntelliJ IDEA Community Edition 2017.3.4/bin/idea64.exe\" C:/aa/work/tools/IntelliJ/projects/PPL --line [[line]] [[file]]"

